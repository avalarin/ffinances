.av-input {
  height: $input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: $padding-base-vertical $padding-base-horizontal;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $input-color;
  background-color: $input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid $input-border;
  border-radius: $input-border-radius;

  // Placeholder
  @include placeholder();

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    cursor: not-allowed;
    background-color: $input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content
  }

  > input {
    border: 0;

    &:focus {
      outline: 0;
    }
  }

  &:focus {
    outline: 0;
  }

  &.has-error {
    color: $state-danger-text;
    background-color: $state-danger-bg;
    border-color: $state-danger-border;
  }

  &.inline {
    display: inline-block;
    vertical-align: middle;
  }
  
  &.search {
    padding-right: 3px;

    .btn {
      display: inline-block;
      margin-top: -4px;
    }

  }  

}